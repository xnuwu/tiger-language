Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN RPAREN
    5    | INT
    6    | STRING
    7    | CMT
    8    | LPAREN expseq RPAREN
    9    | MINUS exp
   10    | func_call_exp
   11    | arith_exp
   12    | comp_exp
   13    | bool_exp
   14    | record_create_exp
   15    | array_create_exp
   16    | lvalue ASSIGN exp
   17    | if_exp
   18    | loop_exp
   19    | BREAK
   20    | LET decs IN expseq END

   21 expseq: exp
   22       | exp SEMICOLON expseq

   23 if_exp: IF exp THEN exp
   24       | IF exp THEN exp ELSE exp

   25 loop_exp: WHILE exp DO exp
   26         | FOR ID ASSIGN exp TO exp DO exp

   27 func_call_exp: ID LPAREN RPAREN
   28              | ID LPAREN func_call_param_exp RPAREN

   29 func_call_param_exp: exp
   30                    | exp COMMA func_call_param_exp

   31 arith_exp: exp PLUS exp
   32          | exp MINUS exp
   33          | exp TIMES exp
   34          | exp DIVIDE exp

   35 comp_exp: exp EQ exp
   36         | exp NEQ exp
   37         | exp LT exp
   38         | exp LE exp
   39         | exp GT exp
   40         | exp GE exp

   41 bool_exp: exp AND exp
   42         | exp OR exp

   43 record_create_exp: ID LBRACE RBRACE
   44                  | ID LBRACE record_create_exp_no_empty RBRACE

   45 record_create_exp_no_empty: ID EQ exp
   46                           | ID EQ exp COMMA record_create_exp_no_empty

   47 array_create_exp: ID LBRACK exp RBRACK OF exp

   48 decs: /* empty */
   49     | dec decs

   50 dec: typedeclist
   51    | vardec
   52    | fundeclist

   53 typedeclist: typedec
   54            | typedec typedeclist

   55 typedec: TYPE ID EQ ty

   56 ty: ID
   57   | LBRACE tyfields RBRACE
   58   | ARRAY OF ID

   59 tyfields: /* empty */
   60         | tyfields_no_empty

   61 tyfields_no_empty: tyfield
   62                  | tyfield COMMA tyfields_no_empty

   63 tyfield: ID COLON ID

   64 vardec: VAR ID ASSIGN exp
   65       | VAR ID COLON ID ASSIGN exp

   66 fundeclist: fundec
   67           | fundec fundeclist

   68 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   69       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   70 lvalue: ID
   71       | lvalue DOT ID
   72       | ID LBRACK exp RBRACK
   73       | lvalue LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 26 27 28 43 44 45 46 47 55 56 58 63 64 65 68 69 70 71 72
STRING (259) 6
INT (260) 5
COMMA (261) 30 46 62
COLON (262) 63 65 69
SEMICOLON (263) 22
LPAREN (264) 4 8 27 28 68 69
RPAREN (265) 4 8 27 28 68 69
LBRACK (266) 47 72 73
RBRACK (267) 47 72 73
LBRACE (268) 43 44 57
RBRACE (269) 43 44 57
DOT (270) 71
PLUS (271) 31
MINUS (272) 9 32
TIMES (273) 33
DIVIDE (274) 34
EQ (275) 35 45 46 55 68 69
NEQ (276) 36
LT (277) 37
LE (278) 38
GT (279) 39
GE (280) 40
AND (281) 41
OR (282) 42
ASSIGN (283) 16 26 64 65
ARRAY (284) 58
IF (285) 23 24
THEN (286) 23 24
ELSE (287) 24
WHILE (288) 25
FOR (289) 26
TO (290) 26
DO (291) 25 26
LET (292) 20
IN (293) 20
END (294) 20
OF (295) 47 58
BREAK (296) 19
NIL (297) 3
FUNCTION (298) 68 69
VAR (299) 64 65
TYPE (300) 55
CMT (301) 7
LOW (302)
UMINUS (303)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
exp (51)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right:
    1 9 16 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 45 46 47 64 65 68 69 72 73
expseq (52)
    on left: 21 22, on right: 8 20 22
if_exp (53)
    on left: 23 24, on right: 17
loop_exp (54)
    on left: 25 26, on right: 18
func_call_exp (55)
    on left: 27 28, on right: 10
func_call_param_exp (56)
    on left: 29 30, on right: 28 30
arith_exp (57)
    on left: 31 32 33 34, on right: 11
comp_exp (58)
    on left: 35 36 37 38 39 40, on right: 12
bool_exp (59)
    on left: 41 42, on right: 13
record_create_exp (60)
    on left: 43 44, on right: 14
record_create_exp_no_empty (61)
    on left: 45 46, on right: 44 46
array_create_exp (62)
    on left: 47, on right: 15
decs (63)
    on left: 48 49, on right: 20 49
dec (64)
    on left: 50 51 52, on right: 49
typedeclist (65)
    on left: 53 54, on right: 50 54
typedec (66)
    on left: 55, on right: 53 54
ty (67)
    on left: 56 57 58, on right: 55
tyfields (68)
    on left: 59 60, on right: 57 68 69
tyfields_no_empty (69)
    on left: 61 62, on right: 60 62
tyfield (70)
    on left: 63, on right: 61 62
vardec (71)
    on left: 64 65, on right: 51
fundeclist (72)
    on left: 66 67, on right: 52 67
fundec (73)
    on left: 68 69, on right: 66 67
lvalue (74)
    on left: 70 71 72 73, on right: 2 16 71 73


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    program            go to state 13
    exp                go to state 14
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 1

   27 func_call_exp: ID . LPAREN RPAREN
   28              | ID . LPAREN func_call_param_exp RPAREN
   43 record_create_exp: ID . LBRACE RBRACE
   44                  | ID . LBRACE record_create_exp_no_empty RBRACE
   47 array_create_exp: ID . LBRACK exp RBRACK OF exp
   70 lvalue: ID .
   72       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 24
    LBRACK  shift, and go to state 25
    LBRACE  shift, and go to state 26

    $default  reduce using rule 70 (lvalue)


state 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


state 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: LPAREN . RPAREN
    8    | LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 27
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 28
    expseq             go to state 29
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 5

    9 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 30
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 6

   23 if_exp: IF . exp THEN exp
   24       | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 31
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 7

   25 loop_exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 32
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 8

   26 loop_exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 33


state 9

   20 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 34
    VAR       shift, and go to state 35
    TYPE      shift, and go to state 36

    $default  reduce using rule 48 (decs)

    decs         go to state 37
    dec          go to state 38
    typedeclist  go to state 39
    typedec      go to state 40
    vardec       go to state 41
    fundeclist   go to state 42
    fundec       go to state 43


state 10

   19 exp: BREAK .

    $default  reduce using rule 19 (exp)


state 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


state 12

    7 exp: CMT .

    $default  reduce using rule 7 (exp)


state 13

    0 $accept: program . $end

    $end  shift, and go to state 44


state 14

    1 program: exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 1 (program)


state 15

   17 exp: if_exp .

    $default  reduce using rule 17 (exp)


state 16

   18 exp: loop_exp .

    $default  reduce using rule 18 (exp)


state 17

   10 exp: func_call_exp .

    $default  reduce using rule 10 (exp)


state 18

   11 exp: arith_exp .

    $default  reduce using rule 11 (exp)


state 19

   12 exp: comp_exp .

    $default  reduce using rule 12 (exp)


state 20

   13 exp: bool_exp .

    $default  reduce using rule 13 (exp)


state 21

   14 exp: record_create_exp .

    $default  reduce using rule 14 (exp)


state 22

   15 exp: array_create_exp .

    $default  reduce using rule 15 (exp)


state 23

    2 exp: lvalue .
   16    | lvalue . ASSIGN exp
   71 lvalue: lvalue . DOT ID
   73       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 57
    DOT     shift, and go to state 58
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 2 (exp)


state 24

   27 func_call_exp: ID LPAREN . RPAREN
   28              | ID LPAREN . func_call_param_exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 60
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                  go to state 61
    if_exp               go to state 15
    loop_exp             go to state 16
    func_call_exp        go to state 17
    func_call_param_exp  go to state 62
    arith_exp            go to state 18
    comp_exp             go to state 19
    bool_exp             go to state 20
    record_create_exp    go to state 21
    array_create_exp     go to state 22
    lvalue               go to state 23


state 25

   47 array_create_exp: ID LBRACK . exp RBRACK OF exp
   72 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 63
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 26

   43 record_create_exp: ID LBRACE . RBRACE
   44                  | ID LBRACE . record_create_exp_no_empty RBRACE

    ID      shift, and go to state 64
    RBRACE  shift, and go to state 65

    record_create_exp_no_empty  go to state 66


state 27

    4 exp: LPAREN RPAREN .

    $default  reduce using rule 4 (exp)


state 28

   21 expseq: exp .
   22       | exp . SEMICOLON expseq
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    SEMICOLON  shift, and go to state 67
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    TIMES      shift, and go to state 47
    DIVIDE     shift, and go to state 48
    EQ         shift, and go to state 49
    NEQ        shift, and go to state 50
    LT         shift, and go to state 51
    LE         shift, and go to state 52
    GT         shift, and go to state 53
    GE         shift, and go to state 54
    AND        shift, and go to state 55
    OR         shift, and go to state 56

    $default  reduce using rule 21 (expseq)


state 29

    8 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 68


state 30

    9 exp: MINUS exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    $default  reduce using rule 9 (exp)


state 31

   23 if_exp: IF exp . THEN exp
   24       | IF exp . THEN exp ELSE exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    THEN    shift, and go to state 69


state 32

   25 loop_exp: WHILE exp . DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    DO      shift, and go to state 70


state 33

   26 loop_exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 71


state 34

   68 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   69       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 72


state 35

   64 vardec: VAR . ID ASSIGN exp
   65       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 73


state 36

   55 typedec: TYPE . ID EQ ty

    ID  shift, and go to state 74


state 37

   20 exp: LET decs . IN expseq END

    IN  shift, and go to state 75


state 38

   49 decs: dec . decs

    FUNCTION  shift, and go to state 34
    VAR       shift, and go to state 35
    TYPE      shift, and go to state 36

    $default  reduce using rule 48 (decs)

    decs         go to state 76
    dec          go to state 38
    typedeclist  go to state 39
    typedec      go to state 40
    vardec       go to state 41
    fundeclist   go to state 42
    fundec       go to state 43


state 39

   50 dec: typedeclist .

    $default  reduce using rule 50 (dec)


state 40

   53 typedeclist: typedec .
   54            | typedec . typedeclist

    TYPE  shift, and go to state 36

    $default  reduce using rule 53 (typedeclist)

    typedeclist  go to state 77
    typedec      go to state 40


state 41

   51 dec: vardec .

    $default  reduce using rule 51 (dec)


state 42

   52 dec: fundeclist .

    $default  reduce using rule 52 (dec)


state 43

   66 fundeclist: fundec .
   67           | fundec . fundeclist

    FUNCTION  shift, and go to state 34

    $default  reduce using rule 66 (fundeclist)

    fundeclist  go to state 78
    fundec      go to state 43


state 44

    0 $accept: program $end .

    $default  accept


state 45

   31 arith_exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 79
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 46

   32 arith_exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 80
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 47

   33 arith_exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 81
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 48

   34 arith_exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 82
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 49

   35 comp_exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 83
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 50

   36 comp_exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 84
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 51

   37 comp_exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 85
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 52

   38 comp_exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 86
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 53

   39 comp_exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 87
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 54

   40 comp_exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 88
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 55

   41 bool_exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 89
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 56

   42 bool_exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 90
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 57

   73 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 91
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 58

   71 lvalue: lvalue DOT . ID

    ID  shift, and go to state 92


state 59

   16 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 93
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 60

   27 func_call_exp: ID LPAREN RPAREN .

    $default  reduce using rule 27 (func_call_exp)


state 61

   29 func_call_param_exp: exp .
   30                    | exp . COMMA func_call_param_exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    COMMA   shift, and go to state 94
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 29 (func_call_param_exp)


state 62

   28 func_call_exp: ID LPAREN func_call_param_exp . RPAREN

    RPAREN  shift, and go to state 95


state 63

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   47 array_create_exp: ID LBRACK exp . RBRACK OF exp
   72 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 96
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56


state 64

   45 record_create_exp_no_empty: ID . EQ exp
   46                           | ID . EQ exp COMMA record_create_exp_no_empty

    EQ  shift, and go to state 97


state 65

   43 record_create_exp: ID LBRACE RBRACE .

    $default  reduce using rule 43 (record_create_exp)


state 66

   44 record_create_exp: ID LBRACE record_create_exp_no_empty . RBRACE

    RBRACE  shift, and go to state 98


state 67

   22 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 28
    expseq             go to state 99
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 68

    8 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 8 (exp)


state 69

   23 if_exp: IF exp THEN . exp
   24       | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 100
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 70

   25 loop_exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 101
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 71

   26 loop_exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 102
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 72

   68 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   69       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 103


state 73

   64 vardec: VAR ID . ASSIGN exp
   65       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 104
    ASSIGN  shift, and go to state 105


state 74

   55 typedec: TYPE ID . EQ ty

    EQ  shift, and go to state 106


state 75

   20 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 28
    expseq             go to state 107
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 76

   49 decs: dec decs .

    $default  reduce using rule 49 (decs)


state 77

   54 typedeclist: typedec typedeclist .

    $default  reduce using rule 54 (typedeclist)


state 78

   67 fundeclist: fundec fundeclist .

    $default  reduce using rule 67 (fundeclist)


state 79

   31 arith_exp: exp . PLUS exp
   31          | exp PLUS exp .
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 31 (arith_exp)


state 80

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   32          | exp MINUS exp .
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    $default  reduce using rule 32 (arith_exp)


state 81

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   33          | exp TIMES exp .
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    $default  reduce using rule 33 (arith_exp)


state 82

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   34          | exp DIVIDE exp .
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    $default  reduce using rule 34 (arith_exp)


state 83

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   35         | exp EQ exp .
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (comp_exp)


state 84

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   36         | exp NEQ exp .
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (comp_exp)


state 85

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   37         | exp LT exp .
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (comp_exp)


state 86

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   38         | exp LE exp .
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (comp_exp)


state 87

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   39         | exp GT exp .
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (comp_exp)


state 88

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   40         | exp GE exp .
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (comp_exp)


state 89

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   41         | exp AND exp .
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54

    $default  reduce using rule 41 (bool_exp)


state 90

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   42         | exp OR exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55

    $default  reduce using rule 42 (bool_exp)


state 91

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   73 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 108
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56


state 92

   71 lvalue: lvalue DOT ID .

    $default  reduce using rule 71 (lvalue)


state 93

   16 exp: lvalue ASSIGN exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 16 (exp)


state 94

   30 func_call_param_exp: exp COMMA . func_call_param_exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                  go to state 61
    if_exp               go to state 15
    loop_exp             go to state 16
    func_call_exp        go to state 17
    func_call_param_exp  go to state 109
    arith_exp            go to state 18
    comp_exp             go to state 19
    bool_exp             go to state 20
    record_create_exp    go to state 21
    array_create_exp     go to state 22
    lvalue               go to state 23


state 95

   28 func_call_exp: ID LPAREN func_call_param_exp RPAREN .

    $default  reduce using rule 28 (func_call_exp)


state 96

   47 array_create_exp: ID LBRACK exp RBRACK . OF exp
   72 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 110

    $default  reduce using rule 72 (lvalue)


state 97

   45 record_create_exp_no_empty: ID EQ . exp
   46                           | ID EQ . exp COMMA record_create_exp_no_empty

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 111
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 98

   44 record_create_exp: ID LBRACE record_create_exp_no_empty RBRACE .

    $default  reduce using rule 44 (record_create_exp)


state 99

   22 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 22 (expseq)


state 100

   23 if_exp: IF exp THEN exp .
   24       | IF exp THEN exp . ELSE exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    ELSE    shift, and go to state 112

    $default  reduce using rule 23 (if_exp)


state 101

   25 loop_exp: WHILE exp DO exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 25 (loop_exp)


state 102

   26 loop_exp: FOR ID ASSIGN exp . TO exp DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    TO      shift, and go to state 113


state 103

   68 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   69       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 114

    $default  reduce using rule 59 (tyfields)

    tyfields           go to state 115
    tyfields_no_empty  go to state 116
    tyfield            go to state 117


state 104

   65 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 118


state 105

   64 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 119
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 106

   55 typedec: TYPE ID EQ . ty

    ID      shift, and go to state 120
    LBRACE  shift, and go to state 121
    ARRAY   shift, and go to state 122

    ty  go to state 123


state 107

   20 exp: LET decs IN expseq . END

    END  shift, and go to state 124


state 108

   73 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 73 (lvalue)


state 109

   30 func_call_param_exp: exp COMMA func_call_param_exp .

    $default  reduce using rule 30 (func_call_param_exp)


state 110

   47 array_create_exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 125
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 111

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   45 record_create_exp_no_empty: ID EQ exp .
   46                           | ID EQ exp . COMMA record_create_exp_no_empty

    COMMA   shift, and go to state 126
    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 45 (record_create_exp_no_empty)


state 112

   24 if_exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 127
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 113

   26 loop_exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 128
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 114

   63 tyfield: ID . COLON ID

    COLON  shift, and go to state 129


state 115

   68 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   69       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 130


state 116

   60 tyfields: tyfields_no_empty .

    $default  reduce using rule 60 (tyfields)


state 117

   61 tyfields_no_empty: tyfield .
   62                  | tyfield . COMMA tyfields_no_empty

    COMMA  shift, and go to state 131

    $default  reduce using rule 61 (tyfields_no_empty)


state 118

   65 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 132


state 119

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   64 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 64 (vardec)


state 120

   56 ty: ID .

    $default  reduce using rule 56 (ty)


state 121

   57 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 114

    $default  reduce using rule 59 (tyfields)

    tyfields           go to state 133
    tyfields_no_empty  go to state 116
    tyfield            go to state 117


state 122

   58 ty: ARRAY . OF ID

    OF  shift, and go to state 134


state 123

   55 typedec: TYPE ID EQ ty .

    $default  reduce using rule 55 (typedec)


state 124

   20 exp: LET decs IN expseq END .

    $default  reduce using rule 20 (exp)


state 125

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   47 array_create_exp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 47 (array_create_exp)


state 126

   46 record_create_exp_no_empty: ID EQ exp COMMA . record_create_exp_no_empty

    ID  shift, and go to state 64

    record_create_exp_no_empty  go to state 135


state 127

   24 if_exp: IF exp THEN exp ELSE exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 24 (if_exp)


state 128

   26 loop_exp: FOR ID ASSIGN exp TO exp . DO exp
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56
    DO      shift, and go to state 136


state 129

   63 tyfield: ID COLON . ID

    ID  shift, and go to state 137


state 130

   68 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   69       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 138
    EQ     shift, and go to state 139


state 131

   62 tyfields_no_empty: tyfield COMMA . tyfields_no_empty

    ID  shift, and go to state 114

    tyfields_no_empty  go to state 140
    tyfield            go to state 117


state 132

   65 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 141
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 133

   57 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 142


state 134

   58 ty: ARRAY OF . ID

    ID  shift, and go to state 143


state 135

   46 record_create_exp_no_empty: ID EQ exp COMMA record_create_exp_no_empty .

    $default  reduce using rule 46 (record_create_exp_no_empty)


state 136

   26 loop_exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 144
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 137

   63 tyfield: ID COLON ID .

    $default  reduce using rule 63 (tyfield)


state 138

   69 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 145


state 139

   68 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 146
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 140

   62 tyfields_no_empty: tyfield COMMA tyfields_no_empty .

    $default  reduce using rule 62 (tyfields_no_empty)


state 141

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   65 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 65 (vardec)


state 142

   57 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 57 (ty)


state 143

   58 ty: ARRAY OF ID .

    $default  reduce using rule 58 (ty)


state 144

   26 loop_exp: FOR ID ASSIGN exp TO exp DO exp .
   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 26 (loop_exp)


state 145

   69 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 147


state 146

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   68 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 68 (fundec)


state 147

   69 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    CMT     shift, and go to state 12

    exp                go to state 148
    if_exp             go to state 15
    loop_exp           go to state 16
    func_call_exp      go to state 17
    arith_exp          go to state 18
    comp_exp           go to state 19
    bool_exp           go to state 20
    record_create_exp  go to state 21
    array_create_exp   go to state 22
    lvalue             go to state 23


state 148

   31 arith_exp: exp . PLUS exp
   32          | exp . MINUS exp
   33          | exp . TIMES exp
   34          | exp . DIVIDE exp
   35 comp_exp: exp . EQ exp
   36         | exp . NEQ exp
   37         | exp . LT exp
   38         | exp . LE exp
   39         | exp . GT exp
   40         | exp . GE exp
   41 bool_exp: exp . AND exp
   42         | exp . OR exp
   69 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    TIMES   shift, and go to state 47
    DIVIDE  shift, and go to state 48
    EQ      shift, and go to state 49
    NEQ     shift, and go to state 50
    LT      shift, and go to state 51
    LE      shift, and go to state 52
    GT      shift, and go to state 53
    GE      shift, and go to state 54
    AND     shift, and go to state 55
    OR      shift, and go to state 56

    $default  reduce using rule 69 (fundec)
